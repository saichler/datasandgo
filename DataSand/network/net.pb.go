// Code generated by protoc-gen-go. DO NOT EDIT.
// source: net.proto

/*
Package network is a generated protocol buffer package.

It is generated from these files:
	net.proto

It has these top-level messages:
	NID
	Packet
	Frame
*/
package network

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NID struct {
	NetId     uint32 `protobuf:"varint,1,opt,name=netId" json:"netId,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ServiceId uint32 `protobuf:"varint,3,opt,name=serviceId" json:"serviceId,omitempty"`
	IsSwitch  bool   `protobuf:"varint,4,opt,name=isSwitch" json:"isSwitch,omitempty"`
}

func (m *NID) Reset()                    { *m = NID{} }
func (m *NID) String() string            { return proto.CompactTextString(m) }
func (*NID) ProtoMessage()               {}
func (*NID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NID) GetNetId() uint32 {
	if m != nil {
		return m.NetId
	}
	return 0
}

func (m *NID) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *NID) GetServiceId() uint32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *NID) GetIsSwitch() bool {
	if m != nil {
		return m.IsSwitch
	}
	return false
}

type Packet struct {
	Source     *NID   `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Dest       *NID   `protobuf:"bytes,2,opt,name=dest" json:"dest,omitempty"`
	OrigSource *NID   `protobuf:"bytes,3,opt,name=origSource" json:"origSource,omitempty"`
	PacketId   uint32 `protobuf:"varint,4,opt,name=packetId" json:"packetId,omitempty"`
	Part       uint32 `protobuf:"varint,5,opt,name=part" json:"part,omitempty"`
	MultiPart  bool   `protobuf:"varint,6,opt,name=multiPart" json:"multiPart,omitempty"`
	Priority   uint32 `protobuf:"varint,7,opt,name=priority" json:"priority,omitempty"`
	Data       []byte `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Packet) Reset()                    { *m = Packet{} }
func (m *Packet) String() string            { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()               {}
func (*Packet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Packet) GetSource() *NID {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Packet) GetDest() *NID {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *Packet) GetOrigSource() *NID {
	if m != nil {
		return m.OrigSource
	}
	return nil
}

func (m *Packet) GetPacketId() uint32 {
	if m != nil {
		return m.PacketId
	}
	return 0
}

func (m *Packet) GetPart() uint32 {
	if m != nil {
		return m.Part
	}
	return 0
}

func (m *Packet) GetMultiPart() bool {
	if m != nil {
		return m.MultiPart
	}
	return false
}

func (m *Packet) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Packet) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Frame struct {
	Source    *NID   `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Dest      *NID   `protobuf:"bytes,2,opt,name=dest" json:"dest,omitempty"`
	FrameId   uint32 `protobuf:"varint,3,opt,name=frameId" json:"frameId,omitempty"`
	FrameType uint32 `protobuf:"varint,4,opt,name=frameType" json:"frameType,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Frame) GetSource() *NID {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Frame) GetDest() *NID {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *Frame) GetFrameId() uint32 {
	if m != nil {
		return m.FrameId
	}
	return 0
}

func (m *Frame) GetFrameType() uint32 {
	if m != nil {
		return m.FrameType
	}
	return 0
}

func (m *Frame) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*NID)(nil), "network.NID")
	proto.RegisterType((*Packet)(nil), "network.Packet")
	proto.RegisterType((*Frame)(nil), "network.Frame")
}

func init() { proto.RegisterFile("net.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xcd, 0x4e, 0xf3, 0x30,
	0x10, 0x94, 0xbf, 0xe6, 0x77, 0xbf, 0xf6, 0x62, 0x71, 0xb0, 0x10, 0x87, 0x28, 0xe2, 0x90, 0x03,
	0xca, 0x01, 0x5e, 0xa1, 0x42, 0xca, 0xa5, 0xaa, 0x5c, 0x5e, 0x20, 0xc4, 0x06, 0xac, 0xd2, 0x38,
	0x72, 0x36, 0x54, 0x7d, 0x16, 0x5e, 0x95, 0x03, 0xf2, 0x36, 0x24, 0x08, 0x71, 0xe4, 0xb6, 0x33,
	0xb3, 0x9a, 0x9d, 0x91, 0x0d, 0x69, 0xab, 0xb1, 0xec, 0x9c, 0x45, 0xcb, 0xe3, 0x56, 0xe3, 0xd1,
	0xba, 0x7d, 0x6e, 0x60, 0xb1, 0xa9, 0xd6, 0xfc, 0x02, 0xc2, 0x56, 0x63, 0xa5, 0x04, 0xcb, 0x58,
	0xb1, 0x92, 0x67, 0xc0, 0x39, 0x04, 0xc3, 0x60, 0x94, 0xf8, 0x97, 0xb1, 0x22, 0x95, 0x34, 0xf3,
	0x2b, 0x48, 0x7b, 0xed, 0xde, 0x4c, 0xa3, 0x2b, 0x25, 0x16, 0xb4, 0x3d, 0x13, 0xfc, 0x12, 0x12,
	0xd3, 0xef, 0x8e, 0x06, 0x9b, 0x17, 0x11, 0x64, 0xac, 0x48, 0xe4, 0x84, 0xf3, 0x0f, 0x06, 0xd1,
	0xb6, 0x6e, 0xf6, 0x1a, 0xf9, 0x35, 0x44, 0xbd, 0x1d, 0x5c, 0xa3, 0xe9, 0xde, 0xff, 0xdb, 0x65,
	0x39, 0xe6, 0x29, 0x37, 0xd5, 0x5a, 0x8e, 0x1a, 0xcf, 0x20, 0x50, 0xba, 0x47, 0x3a, 0xff, 0x73,
	0x87, 0x14, 0x7e, 0x03, 0x60, 0x9d, 0x79, 0xde, 0x9d, 0xbd, 0x16, 0xbf, 0xec, 0x7d, 0xd3, 0x7d,
	0xb8, 0x8e, 0xee, 0x57, 0x8a, 0xc2, 0xad, 0xe4, 0x84, 0x7d, 0xd5, 0xae, 0x76, 0x28, 0x42, 0xe2,
	0x69, 0xf6, 0x55, 0x0f, 0xc3, 0x2b, 0x9a, 0xad, 0x17, 0x22, 0x6a, 0x33, 0x13, 0xe4, 0xe6, 0x8c,
	0x75, 0x06, 0x4f, 0x22, 0x1e, 0xdd, 0x46, 0xec, 0xdd, 0x54, 0x8d, 0xb5, 0x48, 0x32, 0x56, 0x2c,
	0x25, 0xcd, 0xf9, 0x3b, 0x83, 0xf0, 0xde, 0xd5, 0x07, 0xfd, 0x67, 0xed, 0x05, 0xc4, 0x4f, 0xde,
	0x70, 0x7a, 0x88, 0x2f, 0xe8, 0x93, 0xd3, 0xf8, 0x70, 0xea, 0xf4, 0x58, 0x75, 0x26, 0xa6, 0x74,
	0xe1, 0x9c, 0xee, 0x31, 0xa2, 0x7f, 0x71, 0xf7, 0x19, 0x00, 0x00, 0xff, 0xff, 0x9d, 0xd8, 0x0f,
	0xcb, 0x24, 0x02, 0x00, 0x00,
}
